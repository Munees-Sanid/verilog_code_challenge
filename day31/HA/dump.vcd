$date
	Tue May 13 10:28:50 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! diff_str $end
$var wire 1 " diff_df $end
$var wire 1 # diff_beh $end
$var wire 1 $ borrow_str $end
$var wire 1 % borrow_df $end
$var wire 1 & borrow_beh $end
$var reg 1 ' a $end
$var reg 1 ( b $end
$var reg 1 ) c $end
$scope module dut1 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 % borrow $end
$var wire 1 ) c $end
$var wire 1 " diff $end
$upscope $end
$scope module dut2 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 ) c $end
$var reg 1 & borrow $end
$var reg 1 # diff $end
$upscope $end
$scope module dut3 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 $ borrow $end
$var wire 1 ) c $end
$var wire 1 * w3 $end
$var wire 1 + w2 $end
$var wire 1 , w1 $end
$var wire 1 ! diff $end
$scope module a1 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 + borrow $end
$var wire 1 , diff $end
$upscope $end
$scope module a2 $end
$var wire 1 , a $end
$var wire 1 ) b $end
$var wire 1 * borrow $end
$var wire 1 ! diff $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 - i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 -
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#2
1%
1$
1"
1&
1#
1!
1*
1)
b1 -
#4
1,
1+
1"
1!
0*
1(
0)
b10 -
#6
0"
0#
0!
1)
b11 -
#8
0%
0$
0+
1"
0&
1#
1!
1'
0(
0)
b100 -
#10
0"
0#
0!
1)
b101 -
#12
0,
0"
0!
1(
0)
b110 -
#14
1%
1$
1"
1&
1#
1!
1*
1)
b111 -
#16
b1000 -

$date
	Wed May 14 10:41:56 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 16 ! d [15:0] $end
$var reg 4 " i [3:0] $end
$scope module dut $end
$var wire 4 # i [3:0] $end
$var wire 4 $ w [3:0] $end
$var wire 16 % d [15:0] $end
$scope module d1 $end
$var wire 1 & en $end
$var wire 2 ' i [1:0] $end
$var wire 4 ( d [3:0] $end
$upscope $end
$scope module d2 $end
$var wire 1 ) en $end
$var wire 2 * i [1:0] $end
$var wire 4 + d [3:0] $end
$upscope $end
$scope module d3 $end
$var wire 1 , en $end
$var wire 2 - i [1:0] $end
$var wire 4 . d [3:0] $end
$upscope $end
$scope module d4 $end
$var wire 1 / en $end
$var wire 2 0 i [1:0] $end
$var wire 4 1 d [3:0] $end
$upscope $end
$scope module d5 $end
$var wire 1 2 en $end
$var wire 2 3 i [1:0] $end
$var wire 4 4 d [3:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 5 j [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 5
b1 4
b0 3
12
b0 1
b0 0
0/
b0 .
b0 -
0,
b0 +
b0 *
0)
b1 (
b0 '
1&
b1 %
b1 $
b0 #
b0 "
b1 !
$end
#2
b10 !
b10 %
b10 (
b1 '
b1 *
b1 -
b1 0
b1 "
b1 #
b1 5
#4
b100 !
b100 %
b100 (
b10 '
b10 *
b10 -
b10 0
b10 "
b10 #
b10 5
#6
b1000 !
b1000 %
b1000 (
b11 '
b11 *
b11 -
b11 0
b11 "
b11 #
b11 5
#8
0&
b1 +
1)
b10000 !
b10000 %
b0 (
b10 $
b10 4
b0 '
b0 *
b0 -
b0 0
b1 3
b100 "
b100 #
b100 5
#10
b100000 !
b100000 %
b10 +
b1 '
b1 *
b1 -
b1 0
b101 "
b101 #
b101 5
#12
b1000000 !
b1000000 %
b100 +
b10 '
b10 *
b10 -
b10 0
b110 "
b110 #
b110 5
#14
b10000000 !
b10000000 %
b1000 +
b11 '
b11 *
b11 -
b11 0
b111 "
b111 #
b111 5
#16
b1 .
0)
1,
b100000000 !
b100000000 %
b0 +
b100 $
b100 4
b0 '
b0 *
b0 -
b0 0
b10 3
b1000 "
b1000 #
b1000 5
#18
b1000000000 !
b1000000000 %
b10 .
b1 '
b1 *
b1 -
b1 0
b1001 "
b1001 #
b1001 5
#20
b10000000000 !
b10000000000 %
b100 .
b10 '
b10 *
b10 -
b10 0
b1010 "
b1010 #
b1010 5
#22
b100000000000 !
b100000000000 %
b1000 .
b11 '
b11 *
b11 -
b11 0
b1011 "
b1011 #
b1011 5
#24
0,
b1 1
1/
b1000000000000 !
b1000000000000 %
b0 .
b1000 $
b1000 4
b0 '
b0 *
b0 -
b0 0
b11 3
b1100 "
b1100 #
b1100 5
#26
b10000000000000 !
b10000000000000 %
b10 1
b1 '
b1 *
b1 -
b1 0
b1101 "
b1101 #
b1101 5
#28
b100000000000000 !
b100000000000000 %
b100 1
b10 '
b10 *
b10 -
b10 0
b1110 "
b1110 #
b1110 5
#30
b1000000000000000 !
b1000000000000000 %
b1000 1
b11 '
b11 *
b11 -
b11 0
b1111 "
b1111 #
b1111 5
#32
b10000 5
